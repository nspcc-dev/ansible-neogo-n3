---

neogo__version: '0.99.1'
neogo__bin_url: 'https://github.com/nspcc-dev/neo-go/releases/download/v{{ neogo__version }}/neo-go-linux-amd64'

neogo__docker_image: 'nspccdev/neo-go:{{ neogo__version }}'
neogo__use_docker: False

# Instance name to have multiple neo-go nodes on the same host
neogo__instance: ''

neogo__user: 'neogo{{ neogo__instance }}'
neogo__group: 'neogo{{ neogo__instance }}'

neogo__conf_dir: '/etc/neogo{{ neogo__instance }}'
# Directory for chain database, snapshots and thing alike
neogo__data_dir: '/var/lib/neogo{{ neogo__instance }}'
neogo__bin_path: '/usr/bin/neogo{{ neogo__instance }}'

# Available network types:
# neo-mainnet, neo-testnet, morph-mainnet, morph-testnet, privnet
neogo__network_type: ''

# Available N3 networks: mainnet, testnet, privnet
neogo__network: '{{ neogo__network_type_settings[neogo__network_type].network }}'

neogo__wallet_path: '{{ neogo__conf_dir }}/wallet.json'
neogo__wallet_password: ''
neogo__wallet: ''

neogo__stateroot_enabled: False
neogo__stateroot_wallet_path: '{{ neogo__conf_dir }}/wallet.stateroot.json'
neogo__stateroot_wallet_password: ''
neogo__stateroot_wallet: ''

neogo__oracle_enabled: False
neogo__oracle_wallet_path: '{{ neogo__conf_dir }}/wallet.oracle.json'
neogo__oracle_wallet_password: ''
neogo__oracle_wallet: ''

neogo__p2pnotary_enabled: False
neogo__p2pnotary_wallet_path: '{{ neogo__conf_dir }}/wallet.notary.json'
neogo__p2pnotary_wallet_password: ''
neogo__p2pnotary_wallet: ''

# Default bind address
neogo__bind_address: '::'

# Ports and options for each service
neogo__p2p_address: '{{ neogo__bind_address }}'
neogo__p2p_port: '{{ neogo__network_type_settings[neogo__network_type].p2p }}'
neogo__p2p_addresses: [ '{{ neogo__p2p_address | ansible.utils.ipwrap }}:{{ neogo__p2p_port }}' ]
neogo__p2p_allow: []
neogo__p2p_group_allow: []
neogo__p2p_host_allow: []

neogo__rpc_enabled: True
neogo__rpc_address: '{{ neogo__bind_address }}'
neogo__rpc_port: '{{ neogo__network_type_settings[neogo__network_type].rpc }}'
neogo__rpc_addresses: [ '{{ neogo__rpc_address | ansible.utils.ipwrap }}:{{ neogo__rpc_port }}' ]
# Same list will be used for TLS ports
neogo__rpc_allow: []
neogo__rpc_group_allow: []
neogo__rpc_host_allow: []
neogo__rpc_start_when_synchronized: False

# TLS requires RPC to be enabled
neogo__tls_enabled: False
neogo__tls_address: '{{ neogo__bind_address }}'
neogo__tls_port: '{{ neogo__network_type_settings[neogo__network_type].tls | d() }}'
neogo__tls_addresses: [ '{{ neogo__tls_address | ansible.utils.ipwrap }}:{{ neogo__tls_port }}' ]
neogo__tls_cert_file: '{{ neogo__conf_dir }}/server.crt'
neogo__tls_key_file: '{{ neogo__conf_dir }}/server.key'

neogo__prometheus_enabled: False
neogo__prometheus_address: 'localhost'
neogo__prometheus_port: 2112
neogo__prometheus_addresses: [ '{{ neogo__prometheus_address | ansible.utils.ipwrap }}:{{ neogo__prometheus_port }}' ]
neogo__prometheus_allow: []
neogo__prometheus_group_allow: []
neogo__prometheus_host_allow: []

neogo__pprof_enabled: False
neogo__pprof_address: 'localhost'
neogo__pprof_port: 2113
neogo__pprof_addresses: [ '{{ neogo__pprof_address | ansible.utils.ipwrap }}:{{ neogo__pprof_port }}' ]
neogo__pprof_allow: []
neogo__pprof_group_allow: []
neogo__pprof_host_allow: []


neogo__raw_config:
  ProtocolConfiguration:
    MaxTraceableBlocks: 2102400
    MemPoolSize: 50000
    InitialGASSupply: 52000000
    TimePerBlock: 15s
    ValidatorsCount: 7
    VerifyBlocks: true
    VerifyTransactions: False
    P2PSigExtensions: False
    StateRootInHeader: False

  ApplicationConfiguration:
    Relay: True
    DBConfiguration:
      Type: 'boltdb'
      BoltDBOptions:
        FilePath: '{{ neogo__data_dir }}/{{ neogo__network }}.bolt'

neogo__default_config:
  - enabled: '{{ neogo__wallet|length > 0 }}'
    path: ApplicationConfiguration
    options:
      Consensus:
        Enabled: True
        UnlockWallet:
          Path: '{{ neogo__wallet_path }}'
          Password: '{{ neogo__wallet_password }}'

  - enabled: 'True'
    path: ApplicationConfiguration
    options:
      P2P:
        Addresses: '{{ neogo__p2p_addresses }}'
        DialTimeout: 3s
        ProtoTickInterval: 2s
        PingInterval: 30s
        PingTimeout: 90s
        MaxPeers: 100
        MinPeers: 4
        AttemptConnPeers: 20

  - enabled: '{{ neogo__rpc_enabled }}'
    path: ApplicationConfiguration
    options:
      RPC:
        Enabled: True
        MaxGasInvoke: 100
        EnableCORSWorkaround: False
        Addresses: '{{ neogo__rpc_addresses }}'
        StartWhenSynchronized: '{{ neogo__rpc_start_when_synchronized }}'

  - enabled: '{{ neogo__rpc_enabled and neogo__tls_enabled }}'
    path: ApplicationConfiguration
    options:
      RPC:
        TLSConfig:
          Enabled: True
          Addresses: '{{ neogo__tls_addresses }}'
          CertFile: '{{ neogo__tls_cert_file }}'
          KeyFile: '{{ neogo__tls_key_file }}'

  - enabled: '{{ neogo__oracle_enabled }}'
    path: ApplicationConfiguration
    options:
      Oracle:
        Enabled: True
        AllowedContentTypes: [ 'application/json' ]
        AllowPrivateHost: False
        MaxTaskTimeout: '432000000s'
#        NeoFS:
#          Nodes: [ 'localhost:8080' ]
        UnlockWallet:
          Path: '{{ neogo__oracle_wallet_path }}'
          Password: '{{ neogo__oracle_wallet_password }}'

  - enabled: '{{ neogo__stateroot_enabled }}'
    path: ApplicationConfiguration
    options:
      StateRoot:
        Enabled: True
        UnlockWallet:
          Path: '{{ neogo__stateroot_wallet_path }}'
          Password: '{{ neogo__stateroot_wallet_password }}'

  - enabled: '{{ neogo__p2pnotary_enabled }}'
    path: ApplicationConfiguration
    options:
      P2PNotary:
        Enabled: True
        UnlockWallet:
          Path: '{{ neogo__p2pnotary_wallet_path }}'
          Password: '{{ neogo__p2pnotary_wallet_password }}'

  - enabled: '{{ neogo__prometheus_enabled }}'
    path: ApplicationConfiguration
    options:
      Prometheus:
        Enabled: True
        Addresses: '{{ neogo__prometheus_addresses }}'

  - enabled: '{{ neogo__pprof_enabled }}'
    path: ApplicationConfiguration
    options:
      Pprof:
        Enabled: True
        Addresses: '{{ neogo__pprof_addresses }}'

neogo__config: []
neogo__group_config: []
neogo__host_config: []

neogo__combined_config: '{{
  neogo__default_network_config +
  neogo__default_config +
  neogo__config +
  neogo__group_config +
  neogo__host_config }}'


# Force debops.ferm run via role import
# May be useful when you need to have multiple instances with different
# firewall rules for each one.
neogo__debops_ferm_import: False

# firewall configuration to be applied with debops.ferm role
neogo__ferm__dependent_rules:
  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_p2p'
    dport: [ '{{ neogo__p2p_port }}' ]
    daddr: [ "{{ ( neogo__p2p_address in ['0.0.0.0', '::0', '::'] )| ternary( '0/0', neogo__p2p_address ) }}" ]
    saddr: '{{ neogo__p2p_allow + neogo__p2p_group_allow + neogo__p2p_host_allow }}'
    protocol: 'tcp'
    rule_state: 'present'

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_rpc'
    dport: [ '{{ neogo__rpc_port }}' ]
    daddr: [ "{{ ( neogo__rpc_address in ['0.0.0.0', '::0', '::'] )| ternary( '0/0', neogo__rpc_address ) }}" ]
    saddr: '{{ neogo__rpc_allow + neogo__rpc_group_allow + neogo__rpc_host_allow }}'
    protocol: 'tcp'
    rule_state: "{{ 'present' if neogo__rpc_enabled else 'absent' }}"

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_tls'
    dport: [ '{{ neogo__tls_port }}' ]
    daddr: [ "{{ ( neogo__tls_address in ['0.0.0.0', '::0', '::'] )| ternary( '0/0', neogo__tls_address ) }}" ]
    saddr: '{{ neogo__rpc_allow + neogo__rpc_group_allow + neogo__rpc_host_allow }}'
    protocol: 'tcp'
    rule_state: "{{ 'present' if neogo__tls_enabled else 'absent' }}"

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_prometheus'
    dport: [ '{{ neogo__prometheus_port }}' ]
    daddr: [ "{{ ( neogo__prometheus_address in ['0.0.0.0', '::0', '::'] )| ternary( '0/0', neogo__prometheus_address ) }}" ]
    saddr: '{{ neogo__prometheus_allow + neogo__prometheus_group_allow + neogo__prometheus_host_allow }}'
    protocol: 'tcp'
    rule_state: "{{ 'present' if neogo__prometheus_enabled else 'absent' }}"

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_pprof'
    dport: [ '{{ neogo__pprof_port }}' ]
    daddr: [ "{{ ( neogo__pprof_address in ['0.0.0.0', '::0', '::'] )| ternary( '0/0', neogo__pprof_address ) }}" ]
    saddr: '{{ neogo__prometheus_allow + neogo__prometheus_group_allow + neogo__prometheus_host_allow }}'
    saddr: '{{ neogo__pprof_allow + neogo__pprof_group_allow + neogo__pprof_host_allow }}'
    protocol: 'tcp'
    rule_state: "{{ 'present' if neogo__pprof_enabled else 'absent' }}"

# Flag to skip binaries download
neogo__binaries_download: True
