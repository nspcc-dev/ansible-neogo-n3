---

# Prepare system
- ansible.builtin.include: 'prepare_user.yml'

- name: Ensure data directory exists
  ansible.builtin.file:
    state: directory
    path: "{{ neogo__data_dir }}"
    owner: "{{ neogo__user }}"
    group: "{{ neogo__group }}"
    mode: '0750'

- name: Create configuration directory parent
  ansible.builtin.file:
    state: directory
    path: "{{ neogo__conf_dir | realpath | dirname }}"
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Create configuration directory
  ansible.builtin.file:
    state: directory
    path: "{{ neogo__conf_dir }}"
    owner: 'root'
    group: "{{ neogo__group }}"
    mode: '0750'

- name: Download neo-go binary
  ansible.builtin.get_url:
    url: "{{ neogo__bin_url }}"
    dest: "{{ neogo__bin_path }}"
    mode: '0755'
    owner: 'root'
    group: 'root'
  when: not (neogo__use_compose | bool)

- ansible.builtin.include: prepare_wallets.yml
  when: >
    (neogo__wallet_unlock | bool) or
    (neogo__stateroot_wallet_unlock | bool) or
    (neogo__oracle_wallet_unlock | bool)

- name: Copy TLS certificate
  ansible.builtin.copy:
    src: "{{ neogo__tls_cert }}"
    dest: "{{ neogo__tls_cert_path }}"
    owner: 'root'
    group: "{{ neogo__group }}"
    mode: '0640'
  when: neogo__tls_enabled | bool
  notify:
    - Restart neogo service

- name: Copy TLS key
  ansible.builtin.copy:
    src: "{{ neogo__tls_key }}"
    dest: "{{ neogo__tls_key_path }}"
    owner: 'root'
    group: "{{ neogo__group }}"
    mode: '0640'
  when: neogo__tls_enabled | bool
  notify:
    - Restart neogo service

- name: Prepare NeoGo config
  ansible.builtin.template:
    src: 'protocol.network.yml.j2'
    dest: "{{ neogo__conf_dir }}/protocol.{{ neogo__network }}.yml"
    owner: 'root'
    group: "{{ neogo__group }}"
    mode: '0640'
  notify:
    - Restart neogo service

- name: Prepare docker-compose
  ansible.builtin.template:
    src: 'docker-compose.yml.j2'
    dest: "{{ neogo__conf_dir }}/docker-compose.yml"
    owner: 'root'
    group: "{{ neogo__group }}"
    mode: '0640'
  when: neogo__use_compose | bool
  notify:
    - Restart neogo service

- name: Copy regular systemd unit file
  ansible.builtin.template:
    src: "neogo-n3.service.bin.j2"
    dest: "/etc/systemd/system/neogo{{ neogo__instance }}.service"
  when: not (neogo__use_compose | bool)
  notify:
    - Restart neogo service

- name: Copy Docker systemd unit file
  ansible.builtin.template:
    src: "neogo-n3.service.compose.j2"
    dest: "/etc/systemd/system/neogo{{ neogo__instance }}.service"
  when: neogo__use_compose | bool
  notify:
    - Restart neogo service

- name: Force debops.ferm run
  ansible.builtin.include_role:
    name: debops.debops.ferm
  vars:
    ferm__dependent_rules:
      - "{{ neogo__ferm__dependent_rules }}"
  when: neogo__debops_ferm_import | bool

- name: Ensure NeoGo service runs
  ansible.builtin.systemd:
    name: "neogo{{ neogo__instance }}.service"
    state: 'restarted'
    enabled: yes
    daemon_reload: yes
    force: yes
